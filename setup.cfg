[metadata]
description-file = README.md

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --cov=src --cov-report=term-missing

[flake8]
max-line-length = 88
ignore = E203
exclude = .git,__pycache__,build,dist,.venv,venv
per-file-ignores =
    # Allow for non-abstract empty methods in abstract base classes
    */tests/*: B027

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True

[coverage:run]
source = src
branch = True
omit =
    */tests/*
    */__init__.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
    # Type checking
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov
