name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ubuntu-latest]

    # services: Uncomment and configure services as needed
    #   redis:
    #     image: redis
    #     ports:
    #       - 6379:6379
    #     options: >-
    #       --health-cmd "redis-cli ping"
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install -r requirements.txt

    - name: Run linters
      run: |
        echo "Running flake8..."
        flake8 src tests
        echo "Running black..."
        black --check src tests
        echo "Running mypy..."
        mypy src

    - name: Create test results directory
      run: mkdir -p test-results

    - name: Run tests with coverage
      env:
        PYTHONPATH: ${{ github.workspace }}
        # Add any required environment variables here
        # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # Ensure the test-results directory exists and is empty
        rm -rf test-results
        mkdir -p test-results

        # Run pytest with coverage and junit output
        python -m pytest \
          --cov=src \
          --cov-report=xml:coverage.xml \
          --junitxml=test-results/junit.xml \
          -v \
          --cov-report=term

    - name: Upload coverage to Codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        fail_ci_if_error: false

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: |
          test-results/*.xml
          coverage.xml
        retention-days: 7

  # Add additional jobs for other checks if needed
  # security:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Security check with Bandit
  #       run: |
  #         pip install bandit
  #         bandit -r src -f json -o bandit-results.json
  #     - name: Upload security results
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: bandit-results.json
